name: Alternador Snake/Pac-Man

on:
  schedule:
    - cron: "0 */12 * * *"  # a cada 12 horas
  workflow_dispatch:

jobs:
  generate:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repositório
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # necessário pra acessar a branch output

      - name: Buscar e trocar para a branch 'output'
        run: |
          git fetch origin output
          git checkout output || git checkout -b output

      - name: Ler modo atual (snake ou pacman)
        id: modo
        run: |
          if [ ! -f mode.txt ]; then
            echo "snake" > mode.txt
          fi
          echo "modo=$(cat mode.txt)" >> $GITHUB_OUTPUT

      - name: Gerar cor aleatória (caso Snake)
        id: cor
        run: |
          python3 -c '
          import random
          cores = ["#FFA500", "#00FFFF", "#32CD32", "#FF69B4", "#FFD700", "#DC143C", "#4B0082", "#008080", "#800080", "#FF8C00", "#98FF98", "#FF4500"]
          print(f"::set-output name=cor::{random.choice(cores)}")
          '

      - name: Gerar Snake
        if: steps.modo.outputs.modo == 'snake'
        uses: Platane/snk@v3
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg?palette=github-dark&color_snake=${{ steps.cor.outputs.cor }}

      - name: Copiar Snake para nome genérico
        if: steps.modo.outputs.modo == 'snake'
        run: cp dist/github-contribution-grid-snake.svg github-contribution-grid.svg

      - name: Gerar Pac-Man
        if: steps.modo.outputs.modo == 'pacman'
        uses: abozanona/pacman-contribution-graph@main
        with:
          github_user_name: ${{ github.repository_owner }}

      - name: Copiar Pac-Man para nome genérico
        if: steps.modo.outputs.modo == 'pacman'
        run: cp pacman-contribution-graph.svg github-contribution-grid.svg

      - name: Alternar o modo para próxima execução
        run: |
          NEXT=$( [ "$(cat mode.txt)" = "snake" ] && echo "pacman" || echo "snake" )
          echo $NEXT > mode.txt

      - name: Commit e Push para output
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Atualiza animação e modo"
          git push origin output